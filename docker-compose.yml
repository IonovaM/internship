services:

  postgres:
    container_name: postgres
    image: 'postgres:latest'
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USERNAME}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CLIENT_USERS=${KAFKA_CLIENT_USERS}
      - KAFKA_CLIENT_PASSWORDS=${KAFKA_CLIENT_PASSWORDS}
      - KAFKA_CONTROLLER_USER=${KAFKA_CONTROLLER_USER}
      - KAFKA_CONTROLLER_PASSWORD=${KAFKA_CONTROLLER_PASSWORD}

  redis:
    image: redis
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  authserver:
    image: 'auth-server'
    container_name: authserver
    ports:
      - '${AUTH_PORT}:${AUTH_PORT}'
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres:5432/${POSTGRES_DATABASE}
      - spring.datasource.username=${POSTGRES_USERNAME}
      - spring.datasource.password=${POSTGRES_PASSWORD}
      - spring.redis.host=redis
      - spring.redis.port=${REDIS_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

#  kafka-ui:
#    image: "provectuslabs/kafka-ui"
#    ports:
#      - "9090:8080"
#    restart: always
#    environment:
#      - KAFKA_CLUSTERS_0_NAME=local
#      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
#      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181
#
#  zookeeper:
#    image: "bitnami/zookeeper:latest"
#    ports:
#      - "2181:2181"
#    volumes:
#      - "zookeeper_data:/bitnami"
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes

volumes:
  db-data:
